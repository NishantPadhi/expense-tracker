{"version":3,"sources":["components/Expenses/ExpenseDate.tsx","components/UI/Card.tsx","components/Expenses/ExpenseItem.tsx","components/Expenses/ExpensesList.tsx","components/Expenses/ExpensesFilter.tsx","components/Chart/ChartBar.tsx","components/Chart/Chart.tsx","components/Expenses/ExpensesChart.tsx","components/Expenses/Expenses.tsx","components/NewExpense/ExpenseForm.tsx","components/NewExpense/NewExpense.tsx","App.tsx","index.tsx"],"names":["ExpenseDate","date","month","toLocaleString","day","year","getFullYear","className","Card","children","classes","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ExpensesFilter","onChangeFilter","selected","value","onChange","event","target","ChartBar","maxValue","label","barFillHeight","Math","round","style","height","Chart","dataPoints","dataPointValues","dataPoint","totalMax","max","ExpensesChart","expenses","chartDataPoints","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","onSaveExpenseData","onCancel","setTitle","setAmount","setDate","onSubmit","preventDefault","expenseData","Date","type","min","step","onClick","NewExpense","onAddExpense","isEditing","setIsEditing","newExpenseData","random","INITIAL_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6aAiBeA,EAd+B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACzCC,EAAQD,EAAKE,eAAe,QAAS,CAAED,MAAO,SAC9CE,EAAMH,EAAKE,eAAe,QAAS,CAAEC,IAAK,YAC1CC,EAAOJ,EAAKK,cAElB,OACE,sBAAKC,UAAU,eAAf,UACE,qBAAKA,UAAU,sBAAf,SAAsCL,IACtC,qBAAKK,UAAU,qBAAf,SAAqCF,IACrC,qBAAKE,UAAU,oBAAf,SAAoCH,MAGzC,ECPcI,G,MAL+B,SAAC,GAA6B,IAA3BD,EAA0B,EAA1BA,UAAWE,EAAe,EAAfA,SACpDC,EAAO,eAAWH,GACxB,OAAO,qBAAKA,UAAWG,EAAhB,SAA0BD,GAClC,GCecE,EAdwB,SAAC,GAA6B,IAA3BV,EAA0B,EAA1BA,KAAMW,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OACrD,OACE,6BACE,eAAC,EAAD,CAAMN,UAAU,eAAhB,UACE,cAAC,EAAD,CAAaN,KAAMA,IACnB,sBAAKM,UAAU,4BAAf,UACE,6BAAKK,IACL,sBAAKL,UAAU,sBAAf,cAAuCM,YAKhD,ECMcC,EAnBsC,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACtD,OAAqB,IAAjBA,EAAMC,OACD,oBAAIT,UAAU,0BAAd,gCAIP,oBAAIA,UAAU,gBAAd,SACGQ,EAAME,KAAI,SAAAC,GAAO,OAChB,cAAC,EAAD,CAEEN,MAAOM,EAAQN,MACfC,OAAQK,EAAQL,OAChBZ,KAAMiB,EAAQjB,MAHTiB,EAAQC,GAFC,KAUvB,ECKcC,G,MAtBV,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,eAAgBC,EAAe,EAAfA,SAOtB,OACE,qBAAKf,UAAU,kBAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,mDACA,yBAAQgB,MAAOD,EAAUE,SAVD,SAC5BC,GAEAJ,EAAeI,EAAMC,OAAOH,MAC7B,EAMK,UACE,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,yBAKT,G,OCLcI,G,YAjBb,SAAC,GAAgC,IAA9BJ,EAA6B,EAA7BA,MAAOK,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MACZC,EACJF,EAAW,EAAX,UAAkBG,KAAKC,MAAOT,EAAQK,EAAY,KAAlD,KAA4D,KAE9D,OACE,sBAAKrB,UAAU,YAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,qBACEA,UAAU,kBACV0B,MAAO,CAAEC,OAAQJ,OAGrB,qBAAKvB,UAAU,mBAAf,SAAmCsB,MAGxC,GCMYM,EApB6D,SAAC,GAEtE,IADLC,EACI,EADJA,WAEMC,EAAkBD,EAAWnB,KAAI,SAAAqB,GAAS,OAAIA,EAAUf,KAAd,IAC1CgB,EAAWR,KAAKS,IAAL,MAAAT,KAAI,YAAQM,IAE7B,OACE,qBAAK9B,UAAU,QAAf,SACG6B,EAAWnB,KAAI,SAAAqB,GAAS,OACvB,cAAC,EAAD,CAEEf,MAAOe,EAAUf,MACjBK,SAAUW,EACVV,MAAOS,EAAUT,OAHZS,EAAUT,MAFM,KAU9B,ECMcY,EAxB0C,SAAC,GAAkB,IAAD,EAAfC,EAAe,EAAfA,SACpDC,EAAkB,CACtB,CAAEd,MAAO,MAAON,MAAO,GACvB,CAAEM,MAAO,MAAON,MAAO,GACvB,CAAEM,MAAO,MAAON,MAAO,GACvB,CAAEM,MAAO,MAAON,MAAO,GACvB,CAAEM,MAAO,MAAON,MAAO,GACvB,CAAEM,MAAO,MAAON,MAAO,GACvB,CAAEM,MAAO,MAAON,MAAO,GACvB,CAAEM,MAAO,MAAON,MAAO,GACvB,CAAEM,MAAO,MAAON,MAAO,GACvB,CAAEM,MAAO,MAAON,MAAO,GACvB,CAAEM,MAAO,MAAON,MAAO,GACvB,CAAEM,MAAO,MAAON,MAAO,IAbgD,cAgBnDmB,GAhBmD,IAgBzE,2BAAgC,CAAC,IAAtBxB,EAAqB,QAE9ByB,EADqBzB,EAAQjB,KAAK2C,YACJrB,OAASL,EAAQL,MAChD,CAnBwE,+BAqBzE,OAAO,cAAC,EAAD,CAAOuB,WAAYO,GAC3B,ECKcE,EAvBkC,SAAC,GAAe,IAAb9B,EAAY,EAAZA,MAClD,EAAwC+B,mBAAiB,IAAzD,mBAAOC,EAAP,KAAqBC,EAArB,KAMMC,EAAmBlC,EAAMmC,QAC7B,SAAAhC,GAAO,OAAIA,EAAQjB,KAAKK,cAAc6C,aAAeJ,CAA9C,IAGT,OACE,eAAC,EAAD,CAAMxC,UAAU,WAAhB,UACE,cAAC,EAAD,CACEe,SAAUyB,EACV1B,eAZsB,SAAC+B,GAC3BJ,EAAgBI,EACjB,IAYG,cAAC,EAAD,CAAeV,SAAUO,IACzB,cAAC,EAAD,CAAclC,MAAOkC,MAG1B,E,OC8CcI,G,YApEV,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,kBAAmBC,EAAe,EAAfA,SACzB,EAA0BT,mBAAiB,IAA3C,mBAAOlC,EAAP,KAAc4C,EAAd,KACA,EAA4BV,mBAAiB,IAA7C,mBAAOjC,EAAP,KAAe4C,EAAf,KACA,EAAwBX,mBAAiB,IAAzC,mBAAO7C,EAAP,KAAayD,EAAb,KA6BA,OACE,uBAAMC,SAhBc,SAAClC,GACrBA,EAAMmC,iBAEN,IAAMC,EAAc,CAClBjD,QACAC,QAASA,EACTZ,KAAM,IAAI6D,KAAK7D,IAGjBqD,EAAkBO,GAClBL,EAAS,IACTC,EAAU,IACVC,EAAQ,GACT,EAGC,UACE,sBAAKnD,UAAU,wBAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,0CACA,uBAAOwD,KAAK,OAAOvC,SAhCA,SAACC,GAC1B+B,EAAS/B,EAAMC,OAAOH,MACvB,EA8BwDA,MAAOX,OAE1D,sBAAKL,UAAU,uBAAf,UACE,2CACA,uBACEwD,KAAK,SACLC,IAAI,OACJC,KAAK,OACLzC,SApCkB,SAACC,GAC3BgC,EAAUhC,EAAMC,OAAOH,MACxB,EAmCSA,MAAOV,OAGX,sBAAKN,UAAU,uBAAf,UACE,yCACA,uBACEwD,KAAK,OACLC,IAAI,aACJxB,IAAI,aACJhB,SA1CgB,SAACC,GACzBiC,EAAQjC,EAAMC,OAAOH,MACtB,EAyCSA,MAAOtB,UAIb,sBAAKM,UAAU,uBAAf,UACE,wBAAQ2D,QAASX,EAAjB,oBACA,wBAAQQ,KAAK,SAAb,8BAIP,GCxCcI,EA5B4D,SAAC,GAErE,IADLC,EACI,EADJA,aAEA,EAAkCtB,oBAAS,GAA3C,mBAAOuB,EAAP,KAAkBC,EAAlB,KAUA,OACE,sBAAK/D,UAAU,cAAf,WACI8D,GACA,wBAAQH,QAAS,kBAAMI,GAAa,EAAnB,EAAjB,6BAEDD,GACC,cAAC,EAAD,CACEf,kBAfuB,SAACiB,GAC9B,IAAMV,EAAW,2BACZU,GADY,IAEfpD,GAAIY,KAAKyC,SAASrB,aAGpBiB,EAAaP,EACd,EASON,SAAU,kBAAMe,GAAa,EAAnB,MAKnB,EC1BKG,EAA8B,CAClC,CACEtD,GAAI,KACJP,MAAO,eACPC,OAAQ,MACRZ,KAAM,IAAI6D,KAAK,KAAM,EAAG,KAE1B,CACE3C,GAAI,KACJP,MAAO,SACPC,OAAQ,OACRZ,KAAM,IAAI6D,KAAK,KAAM,EAAG,KAE1B,CACE3C,GAAI,KACJP,MAAO,gBACPC,OAAQ,OACRZ,KAAM,IAAI6D,KAAK,KAAM,EAAG,KAE1B,CACE3C,GAAI,KACJP,MAAO,oBACPC,OAAQ,IACRZ,KAAM,IAAI6D,KAAK,KAAM,EAAG,MAmBbY,EAfO,WACpB,MAAgC5B,mBAAS2B,GAAzC,mBAAO/B,EAAP,KAAiBiC,EAAjB,KAMA,OACE,qCACE,cAAC,EAAD,CAAYP,aANU,SAAClD,GACzByD,GAAY,SAAAC,GAAY,OAAK1D,GAAL,mBAAiB0D,GAAjB,GACzB,IAKG,cAAC,EAAD,CAAU7D,MAAO2B,MAGtB,ECzCDmC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,Q","file":"static/js/main.bcb79352.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./ExpenseDate.css\";\n\nconst ExpenseDate: React.FC<{ date: Date }> = ({ date }) => {\n  const month = date.toLocaleString(\"en-US\", { month: \"long\" });\n  const day = date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n  const year = date.getFullYear();\n\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n      <div className=\"expense-date__day\">{day}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import React from \"react\";\nimport \"./Card.css\";\n\nconst Card: React.FC<{ className: string }> = ({ className, children }) => {\n  const classes = `card ${className}`;\n  return <div className={classes}>{children}</div>;\n};\n\nexport default Card;\n","import React from \"react\";\nimport \"./ExpenseItem.css\";\n\nimport { Expense } from \"../../models/Expense.model\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\n\nconst ExpenseItem: React.FC<Expense> = ({ date, title, amount }) => {\n  return (\n    <li>\n      <Card className=\"expense-item\">\n        <ExpenseDate date={date} />\n        <div className=\"expense-item__description\">\n          <h2>{title}</h2>\n          <div className=\"expense-item__price\">${amount}</div>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ExpenseItem;\n","import React from \"react\";\nimport \"./ExpensesList.css\";\n\nimport { Expense } from \"../../models/Expense.model\";\nimport ExpenseItem from \"./ExpenseItem\";\n\nconst ExpensesList: React.FC<{ items: Expense[] }> = ({ items }) => {\n  if (items.length === 0) {\n    return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>;\n  }\n\n  return (\n    <ul className=\"expenses-list\">\n      {items.map(expense => (\n        <ExpenseItem\n          key={expense.id}\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ExpensesList;\n","import React from \"react\";\nimport \"./ExpensesFilter.css\";\n\nconst ExpensesFilter: React.FC<{\n  selected: string;\n  onChangeFilter: (value: string) => void;\n}> = ({ onChangeFilter, selected }) => {\n  const dropdownChangeHandler = (\n    event: React.ChangeEvent<HTMLSelectElement>\n  ) => {\n    onChangeFilter(event.target.value);\n  };\n\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select value={selected} onChange={dropdownChangeHandler}>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import React from \"react\";\nimport \"./ChartBar.css\";\n\nconst ChartBar: React.FC<{ value: number; maxValue: number; label: string }> =\n  ({ value, maxValue, label }) => {\n    const barFillHeight =\n      maxValue > 0 ? `${Math.round((value / maxValue) * 100)}%` : \"0%\";\n\n    return (\n      <div className=\"chart-bar\">\n        <div className=\"chart-bar__inner\">\n          <div\n            className=\"chart-bar__fill\"\n            style={{ height: barFillHeight }}\n          ></div>\n        </div>\n        <div className=\"chart-bar__label\">{label}</div>\n      </div>\n    );\n  };\n\nexport default ChartBar;\n","import React from \"react\";\nimport \"./Chart.css\";\n\nimport ChartBar from \"./ChartBar\";\n\nconst Chart: React.FC<{ dataPoints: { label: string; value: number }[] }> = ({\n  dataPoints,\n}) => {\n  const dataPointValues = dataPoints.map(dataPoint => dataPoint.value);\n  const totalMax = Math.max(...dataPointValues);\n\n  return (\n    <div className=\"chart\">\n      {dataPoints.map(dataPoint => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMax}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from \"react\";\n\nimport Chart from \"../Chart/Chart\";\nimport { Expense } from \"../../models/Expense.model\";\n\nconst ExpensesChart: React.FC<{ expenses: Expense[] }> = ({ expenses }) => {\n  const chartDataPoints = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n\n  for (const expense of expenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpensesChart;\n","import React, { useState } from \"react\";\nimport \"./Expenses.css\";\n\nimport { Expense } from \"../../models/Expense.model\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpensesChart from \"./ExpensesChart\";\nimport Card from \"../UI/Card\";\n\nconst Expenses: React.FC<{ items: Expense[] }> = ({ items }) => {\n  const [filteredYear, setFilteredYear] = useState<string>(\"\");\n\n  const filterChangeHandler = (selectedYear: string) => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredExpenses = items.filter(\n    expense => expense.date.getFullYear().toString() === filteredYear\n  );\n\n  return (\n    <Card className=\"expenses\">\n      <ExpensesFilter\n        selected={filteredYear}\n        onChangeFilter={filterChangeHandler}\n      />\n      <ExpensesChart expenses={filteredExpenses} />\n      <ExpensesList items={filteredExpenses} />\n    </Card>\n  );\n};\n\nexport default Expenses;\n","import React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\n\nimport { Expense } from \"../../models/Expense.model\";\n\nconst ExpenseForm: React.FC<{\n  onSaveExpenseData: (expense: Expense) => void;\n  onCancel: () => void;\n}> = ({ onSaveExpenseData, onCancel }) => {\n  const [title, setTitle] = useState<string>(\"\");\n  const [amount, setAmount] = useState<string>(\"\");\n  const [date, setDate] = useState<string>(\"\");\n\n  const titleChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n  };\n\n  const amountChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setAmount(event.target.value);\n  };\n\n  const dateChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setDate(event.target.value);\n  };\n\n  const submitHandler = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const expenseData = {\n      title,\n      amount: +amount,\n      date: new Date(date),\n    };\n\n    onSaveExpenseData(expenseData);\n    setTitle(\"\");\n    setAmount(\"\");\n    setDate(\"\");\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input type=\"text\" onChange={titleChangeHandler} value={title} />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            onChange={amountChangeHandler}\n            value={amount}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            onChange={dateChangeHandler}\n            value={date}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button onClick={onCancel}>Cancel</button>\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import React, { useState } from \"react\";\nimport \"./NewExpense.css\";\n\nimport { Expense } from \"../../models/Expense.model\";\nimport ExpenseForm from \"./ExpenseForm\";\n\nconst NewExpense: React.FC<{ onAddExpense: (expense: Expense) => void }> = ({\n  onAddExpense,\n}) => {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const saveExpenseDataHandler = (newExpenseData: Expense) => {\n    const expenseData = {\n      ...newExpenseData,\n      id: Math.random().toString(),\n    };\n\n    onAddExpense(expenseData);\n  };\n  return (\n    <div className=\"new-expense\">\n      {!isEditing && (\n        <button onClick={() => setIsEditing(true)}>Add New Expense</button>\n      )}\n      {isEditing && (\n        <ExpenseForm\n          onSaveExpenseData={saveExpenseDataHandler}\n          onCancel={() => setIsEditing(false)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import React, { useState } from \"react\";\n\nimport { Expense } from \"./models/Expense.model\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst INITIAL_EXPENSES: Expense[] = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  {\n    id: \"e2\",\n    title: \"New TV\",\n    amount: 799.49,\n    date: new Date(2021, 2, 12),\n  },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App: React.FC = () => {\n  const [expenses, setExpenses] = useState(INITIAL_EXPENSES);\n\n  const addExpenseHandler = (expense: Expense) => {\n    setExpenses(prevExpenses => [expense, ...prevExpenses]);\n  };\n\n  return (\n    <>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}